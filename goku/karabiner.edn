;; README
;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any
;;
;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

{
;; profiles
:profiles {:Default { :default true :sim 200 :delay 500 :alone 500 :held 500 }}

:froms {
  :anykey {:any :key_code :modi {:optional [:any]}}
}

:tos {
  :same_app_wins {:key :grave_accent_and_tilde :modi [:left_command] :lazy true}
  :prev_app      {:key :tab                    :modi [:left_command] :lazy true}
  :to_abc [{:input :abc}]
  :alfred_mk [{:input :abc} {:key :1 :modi [:left_shift]} {:key :3 :modi [:left_shift]} {:key :1 :modi [:left_shift]}]
  :alfred_sb [{:key :1 :modi [:left_shift]} {:key :1 :modi [:left_shift]} {:key :3 :modi [:left_shift]} {:key :1 :modi [:left_shift]}]
  :open_spec_mode [{:shell "/usr/local/bin/yabai -m config window_border on && yabai -m config active_window_border_color 0xffff00ff"}]
  :close_spec_mode [{:shell "/usr/local/bin/yabai -m config window_border off"}]
  :im_abc [{:shell "/usr/local/bin/im-select com.apple.keylayout.ABC"}]
  :im_sogou [{:shell "/usr/local/bin/im-select com.sogou.inputmethod.sogou.pinyin"}]
  :kitty_prefix {:key :b :modi [:left_control :left_shift] :lazy true}
}

;; templates
:templates {
  :open "open -b %s"
  :open_url "open -u %s"
  :typing "osascript -e 'tell application \"System Events\" to keystroke \"%s\" as text'"
  :spec_display_and_space "~/.config/yabai/scripts/focus_space_in_display.sh %s"
}


:applications {
  :androidstudio ["com.google.android.studio" 
                  "com.google.android.studio-EAP"]
  :intellijce    ["com.jetbrains.intellij.ce"]
  :ideas         ["com.google.android.studio"
                  "com.google.android.studio-EAP"
                  "com.jetbrains.intellij.ce" ]
  :vscode        ["com.microsoft.vscode"]
  :terminals     ["io.alacritty"
                  "net.kovidgoyal.kitty"
                  "com.googlecode.iterm2"
                  "com.apple.Terminal"]
  :designapp     ["com.figma.Desktop"]
  :photoshop     ["com.adobe.Photoshop"]
  :chrome        ["com.google.Chrome"]
  :browser       ["com.google.Chrome"
                  "com.google.Chrome.beta"
                  "com.vivaldi.Vivaldi"
                  "com.apple.Safari" ]
  :vivaldi       ["com.vivaldi.Vivaldi"]
  :logseq        ["com.electron.logseq"]
  :kitty         ["net.kovidgoyal.kitty"]
}


;; layers
:layers {
         :ps-sb-mode       {:key :tab                         :condi :photoshop}
}


:simlayers {
  ;; Global 
  ;; yabai
  :w-mode {:key :w}
  :r-mode {:key :r}
  :e-mode {:key :e}
  :c-mode {:key :c}
  ;; launch
  :l-mode {:key :l}
  ;; navigation/shortcuts
  :s-mode {:key :s}
  :Ss-mode {:key :s :modi {:mandatory :left_shift}}
  ;; quick action
  :q-mode {:key :q}
  ;; markdown action / display 1
  :m-mode {:key :m}
  ;; display 2
  :n-mode {:key :n}
  ;; select
  :v-mode {:key :v}
  :Sv-mode {:key :v :modi {:mandatory :left_shift}}
  ;; delete
  :x-mode {:key :x}
  ;; zoom
  :z-mode {:key :z}
  ;; sign
  :period-mode {:key :period}
  ;; mouse
  :mouse-mode {:key :a :afterup {:set ["mouse-scroll-mode" 0]}}
  ;; Domain
  :android-mode     {:key :d                                :condi :androidstudio}
  :ideas-mode       {:key :d                                :condi :ideas}
  :chrome-mode      {:key :d                                :condi :chrome}
  :vivaldi-mode     {:key :d                                :condi :vivaldi}
  :vim-macro-mode   {:key :return_or_enter                  :condi :terminals}
  :tmux-mode        {:key :d                                :condi :terminals}
  :tmux-resize-mode {:key :r :modi {:mandatory :left_shift} :condi :terminals}
  :tmux-swap-mode   {:key :e :modi {:mandatory :left_shift} :condi :terminals}
  :design_app       {:key :spacebar                         :condi :designapp}
  :ps-v-mode        {:key :v                                :condi :photoshop}
  :ps-actions       {:key :spacebar                         :condi :photoshop}
  :logseq-mode      {:key :d                                :condi :logseq}
  :kitty-tmux-imitation {:key :f                            :condi :kitty}
}


:main [
  {:des "yabai"
   :rules [
           :w-mode
           [:h :!FQh]
           [:j :!FQj]
           [:k :!FQk]
           [:l :!FQl]
           [:p :!FQp]
           [:n :!FQn]
           :r-mode
           [:h :!FEh]
           [:j :!FEj]
           [:k :!FEk]
           [:l :!FEl]
           [:i :!FEi]
           [:d :!FEd]
           :e-mode
           [:h :!FCh]
           [:j :!FCj]
           [:k :!FCk]
           [:l :!FCl]
           [:open_bracket :!FCr]
           [:s :!FCs]
           :c-mode
           [:h :!FWh]
           [:j :!FWj]
           [:k :!FWk]
           [:l :!FWl]
           [:i :!FWi]
           :s-mode
           [:n :!FWn]
           [:p :!FWp]
           :n-mode
           [:q [:spec_display_and_space "1 first"]]
           [:w [:spec_display_and_space "1 last"]]
           [:1 [:spec_display_and_space "1 1"]]
           [:2 [:spec_display_and_space "1 2"]]
           [:3 [:spec_display_and_space "1 3"]]
           [:4 [:spec_display_and_space "1 4"]]
           [:5 [:spec_display_and_space "1 5"]]
           [:6 [:spec_display_and_space "1 6"]]
           [:7 [:spec_display_and_space "1 7"]]
           [:8 [:spec_display_and_space "1 8"]]
           [:9 [:spec_display_and_space "1 9"]]
           :m-mode
           [:q [:spec_display_and_space "2 first"]]
           [:w [:spec_display_and_space "2 last"]]
           [:1 [:spec_display_and_space "2 1"]]
           [:2 [:spec_display_and_space "2 2"]]
           [:3 [:spec_display_and_space "2 3"]]
           [:4 [:spec_display_and_space "2 4"]]
           [:5 [:spec_display_and_space "2 5"]]
           [:6 [:spec_display_and_space "2 6"]]
           [:7 [:spec_display_and_space "2 7"]]
           [:8 [:spec_display_and_space "2 8"]]
           [:9 [:spec_display_and_space "2 9"]]
  ]}

  {:des "spec mode"
   :rules [
           [:!Oclose_bracket [:open_spec_mode ["spec-mode" 1]] :!spec-mode]
           [:!Oclose_bracket [:close_spec_mode ["spec-mode" 0]] :spec-mode] 
           [[:f :d] [:close_spec_mode ["spec-mode" 0]] :spec-mode {:params {:sim 50}}]
           [:escape [:close_spec_mode ["spec-mode" 0]] :spec-mode] 
           :spec-mode
           [:##p :##page_up]
           [:##n :##page_down]
           [:##h :##left_arrow]
           [:##j :##down_arrow]
           [:##k :##up_arrow]
           [:##l :##right_arrow]
           [:##1 :##f1]
           [:##2 :##f2]
           [:##3 :##f3]
           [:##4 :##f4]
           [:##5 :##f5]
           [:##6 :##f6]
           [:##7 :##f7]
           [:##8 :##f8]
           [:##9 :##f9]
           [:##0 :##f10]
           [:##hyphen :##f11]
           [:##equal_sign :##f12]
  ]}

  {:des "launch apps"
   :rules [:l-mode
           [:1 [:open "com.google.android.studio"]]
           [:2 [:open "com.spotify.client"]]
           [:3 [:open "com.microsoft.VSCode"]]
           [:4 [:open "com.jetbrains.intellij.ce"]]
           [:z [:open "io.alacritty"]]
           [:c [:!Ch] :chrome]
           [:c [:open "com.google.Chrome"] :!chrome]
           [:v [:!Ch] :vivaldi]
           [:v [:open "com.vivaldi.Vivaldi"] :!vivaldi]
           [:a [:!Ch] :kitty]
           [:a [:open "net.kovidgoyal.kitty"] :!kitty]
           [:s [:!Ch] :logseq]
           [:s [:open "com.electron.logseq"] :!logseq]
           [:r [:prev_app]]
           [:e :!CStab]
           [:q :!CTspacebar] ;; emoji
           [:w :same_app_wins]
           [:g :!TOg] ;; google search
           [:h :!Ch] ;; hide window
           [:m [:left_option]] ;; restore minimize
           [:d :!COslash] ;; search dirs
           [:t :!Oslash] ;; translate
  ]}

  {:des "right command to command-tab when used alone"
   :rules [
           [:##right_command :right_command nil {:alone :prev_app}]
  ]}

  ;; experimental
  {:des "fd to escape"
   :rules [
           [[:f :d] :escape nil {:params {:sim 50}}]
  ]}

  {:des "function key"
   :rules [
           [[:q :1] :f1 nil {:params {:sim 50}}]
           [[:w :2] :f2 nil {:params {:sim 50}}]
           [[:e :3] :f3 nil {:params {:sim 50}}]
           [[:r :4] :f4 nil {:params {:sim 50}}]
           [[:t :5] :f5 nil {:params {:sim 50}}]
           [[:y :6] :f6 nil {:params {:sim 50}}]
           [[:u :7] :f7 nil {:params {:sim 50}}]
           [[:i :8] :f8 nil {:params {:sim 50}}]
           [[:o :9] :f9 nil {:params {:sim 50}}]
           [[:p :0] :f10 nil {:params {:sim 50}}]
           [[:a :1] :f11 nil {:params {:sim 50}}]
           [[:s :2] :f12 nil {:params {:sim 50}}]
           [[:d :3] :f13 nil {:params {:sim 50}}]
           [[:f :4] :f14 nil {:params {:sim 50}}]
           [[:g :5] :f15 nil {:params {:sim 50}}]
           [[:h :6] :f16 nil {:params {:sim 50}}]
           [[:j :7] :f17 nil {:params {:sim 50}}]
           [[:k :8] :f18 nil {:params {:sim 50}}]
           [[:l :9] :f19 nil {:params {:sim 50}}]
           [[:semicolon :0] :f20 nil {:params {:sim 50}}]
  ]}

  {:des "quick bracket/braces sequences"
   :rules [:s-mode
           [:e :!Sopen_bracket]
           [:r :!Sclose_bracket]
           [:d :!S9]
           [:f :!S0]
           [:c :open_bracket]
           [:v :close_bracket]
           [:return_or_enter [:!Cright_arrow :return_or_enter] :!terminals]
           [:slash [:!Sgrave_accent_and_tilde :slash]] ;; home
  ]}

  {:des "document"
   :rules [;; navigation
           :s-mode
           [:##h :##left_arrow]
           [:##j :##down_arrow]
           [:##k :##up_arrow]
           [:##l :##right_arrow]
           [:u :!Oleft_arrow] ;; backward by word
           [:i :!Oright_arrow] ;; forward by word
           :Ss-mode
           [:j :!Cdown_arrow]
           [:k :!Cup_arrow]
           [:h :!Cleft_arrow]
           [:l :!Cright_arrow]
           ;; selection
           :v-mode
           [:j :!Sdown_arrow]
           [:k :!Sup_arrow]
           [:h :!Sleft_arrow]
           [:l :!Sright_arrow]
           [:u :!OSleft_arrow]
           [:i :!OSright_arrow]
           :Sv-mode
           [:j :!CSdown_arrow]
           [:k :!CSup_arrow]
           [:h :!CSleft_arrow]
           [:l :!CSright_arrow]
           [:n :!OSdown_arrow]
           [:p :!OSup_arrow]
           ;; delete
           :x-mode
           [:h :delete_or_backspace]
           [:l :!Fdelete_or_backspace]
           [:u :!Odelete_or_backspace]
  ]}

  {:des "shortcut"
   :rules [:s-mode
           [:semicolon :return_or_enter]
           [:m :mission_control]
           [:close_bracket :!Spage_down]
           [:open_bracket :!Spage_up]
  ]}

  ; use im-select switch sogou from abc if typing, the popup window didn't disappear
  {:des "switch input method with single shift key"
   :rules [
           [:##left_shift :left_shift nil {:alone {:input :abc}
                                             :params {:alone 250} }]
           [:##right_shift :right_shift nil {:alone :im_sogou
                                             :params {:alone 250} }]
  ]}

  {:des "quick action"
   :rules [:q-mode
           [:d :launchpad]
           [:p :play_or_pause] ;; play/pause
           [:hyphen :display_brightness_decrement]
           [:equal_sign :display_brightness_increment]
           [:j :volume_decrement] ;; volume-
           [:k :volume_increment] ;; volume+
           [:m :mute] ;; mute
           [:n :!!n] ;; notification
           [:open_bracket "osascript -e 'tell application \"Spotify\" to play previous track'"] ;; spotify previous track
           [:close_bracket "osascript -e 'tell application \"Spotify\" to play next track'"] ;; spotify next track
           [:y "osascript -e 'tell application \"Spotify\" to playpause'"] ;; spotify play/pause
           [:9 "osascript -e 'tell application \"Spotify\" to set sound volume to (sound volume + 10)'"]
           [:0 "osascript -e 'tell application \"Spotify\" to set sound volume to (sound volume - 10)'"]
           [:l :!CTq] ;; lock
           [:o :!TOo] ;; switch audio output
  ]}

  {:des "zoom"
   :rules [:z-mode
           [:o :!CTequal_sign]
           [:n :!CTf]
  ]}

  {:des "sign"
   :rules [:period-mode
           [:e :equal_sign] ;; =
           [:m :hyphen] ;; -
           [:a :!Sequal_sign] ;; +
           [:u :!Shyphen] ;; _
           [:b :backslash] ;; \
           [:i :!Sbackslash] ;; |
           [:w :!Sgrave_accent_and_tilde] ;; ~
           [:t :!Sgrave_accent_and_tilde] ;; ~
           [:m :!S1] ;;
           [:q :!S2] ;; @
           [:n :!S3] ;; #
           [:d :!S4] ;; $
           [:b :!S5] ;; \
           [:c :!S6] ;; ^
           [:h :!S7] ;; &
           [:s :!S8] ;; *
           [:g :grave_accent_and_tilde] ;; `
  ]}

  ;; specified domain app
  {:des "development for android studio / ideas"
   :rules [:android-mode
           ;; compose preview
           [:r :!CSOr]
           [:p :!TSleft_arrow]
           [:n :!TSright_arrow]
           :ideas-mode
           [:open_bracket :!Sescape]
  ]}

  {:des "logseq"
   :rules [:logseq-mode
           [:t [:typing "TODO "]]
  ]}

  {:des "chrome"
   :rules [
           :vivaldi-mode
           [:h :!CSopen_bracket]
           [:j :!CSclose_bracket]
           [:k :!CSopen_bracket]
           [:l :!CSclose_bracket]
           :vivaldi
           [:!Cq [:!Cq ["quit-mode" 0] [:noti :cmdq]] :quit-mode]
           [:!Cq [["quit-mode" 1] [:noti :cmdq "Press Again to QUIT"]] 
            nil {:delayed {:invoked  [["quit-mode" 0] [:noti :cmdq]]
                           :canceled [["quit-mode" 0] [:noti :cmdq]]}
                 :params {:delay 1000} }]
           :chrome-mode
           [:v [:open_url "https://console.cloud.tencent.com/"]]
           [:m [:open_url "https://mail.google.com/"]]
           [:y [:open_url "https://youtube.com"]]
           [:n [:open_url "https://notion.so"]]
           :browser
           [:##left_control :left_control nil {:alone [:button1 :button1 :button1 :!TSi]}]
           [:##left_command :left_command nil {:alone [:button1 :button1 :button1]}]
           [:##left_option :left_option nil {:alone [:button1 :button1]}]
  ]}

  {:des "tmux: map [q] to prefix key"
   :rules [
           [:condi :tmux-mode :!tmux-prefixg-mode]
           [:return_or_enter ["tmux-prefixg-mode" 1]]
           [:condi :tmux-mode :tmux-prefixg-mode]
           [:return_or_enter ["tmux-prefixg-mode" 0]]
           [:condi :tmux-mode :!tmux-prefixg-mode]
           [:u :!Tb]
           [:comma [:!Tb :comma]]
           [:quote [:!Tb :b]]
           [:open_bracket [:!Tb :open_bracket]]
           [:h [:!Tb :h]]
           [:j [:!Tb :j]]
           [:k [:!Tb :k]]
           [:l [:!Tb :l]]
           [:p [:!Tb :p]]
           [:n [:!Tb :n]]
           [:x [:!Tb :x]]
           [:z [:!Tb :z]]
           [:c [:!Tb :c]]
           [:w [:!Tb :w]]
           [:v [:!Tb :!Squote]]
           [:b [:!Tb :!S5]]
           [:i [:!Tb :i]]
           [:t [:!Tb :t]]
           [:s [:!Tb :s]]
           [:semicolon [:!Tb :semicolon]]
           [:!Sslash  [:!Tb :!Sslash]]
           [:0  [:!Tb :spacebar]]
           [:condi :tmux-resize-mode :!tmux-prefixg-mode]
           [:h [:!Tb :!Oleft_arrow]]
           [:j [:!Tb :!Odown_arrow]]
           [:k [:!Tb :!Oup_arrow]]
           [:l [:!Tb :!Oright_arrow]]
           [:condi :tmux-swap-mode :!tmux-prefixg-mode]
           [:h [:!Tb :!Sopen_bracket]]
           [:l [:!Tb :!Sclose_bracket]]
           ;; second mode
           [:condi :tmux-mode :tmux-prefixg-mode]
           [:u :!Tg]
           [:comma [:!Tb :comma]]
           [:quote [:!Tg :b]]
           [:open_bracket [:!Tg :open_bracket]]
           [:h [:!Tg :h]]
           [:j [:!Tg :j]]
           [:k [:!Tg :k]]
           [:l [:!Tg :l]]
           [:p [:!Tg :p]]
           [:n [:!Tg :n]]
           [:x [:!Tg :x]]
           [:z [:!Tg :z]]
           [:c [:!Tg :c]]
           [:w [:!Tg :w]]
           [:v [:!Tg :!Squote]]
           [:b [:!Tg :!S5]]
           [:i [:!Tg :i]]
           [:t [:!Tg :t]]
           [:s [:!Tg :s]]
           [:semicolon [:!Tg :semicolon]]
           [:!Sslash  [:!Tg :!Sslash]]
           [:0  [:!Tg :spacebar]]
           [:condi :tmux-resize-mode :tmux-prefixg-mode]
           [:h [:!Tg :!Oleft_arrow]]
           [:j [:!Tg :!Odown_arrow]]
           [:k [:!Tg :!Oup_arrow]]
           [:l [:!Tg :!Oright_arrow]]
           [:condi :tmux-swap-mode :tmux-prefixg-mode]
           [:h [:!Tg :!Sopen_bracket]]
           [:l [:!Tg :!Sclose_bracket]]
           :vim-macro-mode
           [:a [:!S2 :a]]
           [:b [:!S2 :b]]
           [:c [:!S2 :c]]
           [:d [:!S2 :d]]
           [:e [:!S2 :e]]
           [:f [:!S2 :f]]
           [:g [:!S2 :g]]
           [:h [:!S2 :h]]
           [:i [:!S2 :i]]
           [:j [:!S2 :j]]
           [:k [:!S2 :k]]
           [:l [:!S2 :l]]
           [:m [:!S2 :m]]
           [:n [:!S2 :n]]
           [:o [:!S2 :o]]
           [:p [:!S2 :p]]
           [:q [:!S2 :q]]
           [:r [:!S2 :r]]
           [:s [:!S2 :s]]
           [:t [:!S2 :t]]
           [:u [:!S2 :u]]
           [:v [:!S2 :v]]
           [:w [:!S2 :w]]
           [:x [:!S2 :x]]
           [:y [:!S2 :y]]
           [:z [:!S2 :z]]
  ]}

  {:des "use kitty in tmux way"
   :rules [:kitty-tmux-imitation
           [:u [:kitty_prefix]]
           ;; WINDOW
           [:h [:kitty_prefix :h]]
           [:j [:kitty_prefix :j]]
           [:k [:kitty_prefix :k]]
           [:l [:kitty_prefix :l]]
           [:semicolon [:kitty_prefix :semicolon]]
           [:x [:kitty_prefix :x]] ;; close window
           [:i [:kitty_prefix :i]] ;; select window visually
           [:m [:kitty_prefix :m]] ;; move current window to top
           [:z [:kitty_prefix :z]]
           [:spacebar [:kitty_prefix :spacebar]]
           [:return_or_enter [:!Ct]]
           ;; TAB
           [:p [:!CSopen_bracket]]
           [:n [:!CSclose_bracket]]
           [:c [:kitty_prefix :c]]
  ]}

  {:des "photoshop"
   :rules [:photoshop
           [[:n :m] [:!CSn :return_or_enter] nil {:params {:sim 50}}]
           [[:h :j] :!CSOh nil {:params {:sim 50}}]
           [[:open_bracket :hyphen] :f11 nil {:params {:sim 50}}]
           [[:close_bracket :equal_sign] :f12 nil {:params {:sim 50}}]
           ;; ps-draw-mode
           [:!Cspacebar [:!Cspacebar ["ps-draw-mode" 0]]]
           [[:a :s] ["ps-draw-mode" 1]]
           [:condi :photoshop :ps-draw-mode :!ps-fn-mode]
           [:a :!Cz]
           [:s :!CSz]
           [:h :!CSOh]
           [:equal_sign :!Cequal_sign]
           [:hyphen :!Chyphen]
           [:##left_control :left_control nil {:alone :b}]
           [:z {:key :z :repeat false} nil {:afterup :b}]
           [:r {:key :r :repeat false} nil {:afterup :b}]
           ;; actions
           [:1 :!Cf1]
           [:2 :!Cf2]
           [:d ["ps-draw-mode" 0]]
           ;; ----------
           ; :ps-v-mode
           ; ;; [:x :!COx]
           ; ;; [:c :!COy]
           ; [:x :!CTSh]
           ; [:c :!CTSv]
           ; ;; ----------
           [:condi :pbotosbop :ps-sb-mode :!ps-fn-mode]
           [:t :!CTt]
           [:r :!CTr]
           ;; hej stylus
           [:1 :!!1]
           [:2 :!!2]
           [:3 :!!3]
           [:4 :!!4]
           [:5 :!!5]
           [:s :!!s]
           [:d :!!d]
           [:condi :photoshop :ps-draw-mode :!ps-fn-mode]
           [:!Sq :!!s]
           [:!Sw :!!d]
           [:1 :!TSO1]
           [:2 :!TSO2]
           [:3 :!TSO3]
           ;; --------------------
           ;; order is master
           ;; --------------------
           [:condi :photoshop :ps-fn-mode]
           ; flip layer
           [:h :!CTSh]
           [:v :!CTSv]
           ; flip whole canvas
           ; [:x ]
           ; [:y ]
           :photoshop
           [:##left_option :left_option nil {:alone ["ps-fn-mode" 1]
                                             :params {:delay 1000}
                                             :delayed {:invoked [["ps-fn-mode" 0]]
                                                       :canceled ["ps-fn-mode" 0]
                                                         }}]
           [:##right_option :right_option nil {:alone ["ps-fn-mode" 1]
                                               :params {:delay 1000}
                                               :delayed {:invoked [["ps-fn-mode" 0]]
                                                         :canceled ["ps-fn-mode" 0]
                                                         }}]
  ]}

  ;; snippets
  {:des "markdown"
   :rules [:m-mode
           [:d :alfred_mk]
  ]}

  {:des "symbols"
   :rules [:period-mode
           [:left_command [:alfred_sb :!Sc]]
           [:left_option [:alfred_sb :!So]]
           [:left_shift [:alfred_sb :!Ss]]
           [:left_control [:alfred_sb :!St]]
           [:tab [:alfred_sb :t :a]]
           [:spacebar [:alfred_sb :s :p]]
           [:return_or_enter [:alfred_sb :r :e]]
           :m-mode
           [:s [:alfred_sb]]
  ]}

  {:des "design app: navigation"
   :rules [:design_app
           [:w :up_arrow]
           [:s :down_arrow]
           [:a :left_arrow]
           [:d :right_arrow]
  ]}

  {:des "mouse"
   :rules [
           [:##j {:mkey {:vwheel 32}} [["mouse-scroll-mode" 1]] ["mouse-mode" 1]]
           [:##h {:mkey {:hwheel 32}} [["mouse-scroll-mode" 1]] ["mouse-mode" 1]]
           [:##k {:mkey {:vwheel -32}} [["mouse-scroll-mode" 1]] ["mouse-mode" 1]]
           [:##l {:mkey {:hwheel -32}} [["mouse-scroll-mode" 1]] ["mouse-mode" 1]]
           :mouse-mode
           [:##j {:mkey {:y 1024}}]
           [:##k {:mkey {:y -1024}}]
           [:##h {:mkey {:x -1024}}]
           [:##l {:mkey {:x 1024}}]
           [:##y {:pkey :button1}]
           [:##m {:pkey :button3}]
           [:##n {:pkey :button2}]
           [:##s ["mouse-scroll-mode" 1] nil {:afterup ["mouse-scroll-mode" 0]}]
           [:##f {:mkey {:speed 0.5}}]
  ]}

  ;; {:des "poker mapping"
  ;;  :rules [:poker
           ;; [:##backslash :delete_or_backspace]
           ;; [:##delete_or_backspace :backslash]
           ;; [:##caps_lock :left_control]
           ;; [:##left_command :left_option]
           ;; [:##left_option :left_command]
           ;; [:##left_control :escape]
           ;; [:right_control :right_option]
           ;; [:right_option :right_command]
  ;; ]}
]

; sometime not work, need to switch out and come back to window, then work
:input-sources {
  :abc   {:input_source_id "^com\\.apple\\.keylayout\\.ABC$"}
  :sogou {:input_source_id "^com\\.sogou\\.inputmethod\\.sogou\\.pinyin$"}
}

:devices {:poker [{:product_id 521 :vendor_id 1241}]}

:simlayer-threshold 370
}
